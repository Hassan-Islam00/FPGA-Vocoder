// -------------------------------------------------------------
// 
// File Name: C:\Users\Hassa\Documents\GitHub\vocoder\MATLAB\MATLAB_CodeGen\codegen\envelopeModulation\hdlsrc\Quadrant_Correction.sv
// Created: 2024-03-28 20:55:43
// 
// Generated by MATLAB 23.2, MATLAB Coder 23.2 and HDL Coder 23.2
// 
// 
// -------------------------------------------------------------


import envelopeModulation_fixpt_pkg::* ;

// -------------------------------------------------------------
// 
// Module: Quadrant_Correction
// Source Path: envelopeModulation_fixpt/HDL_CMA_core/Quadrant_Correction
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Quadrant_Correction
          (  input logic signed [23:0] zin  /* sfix24_En23 */,
             input logic [4:0] QA_Control  /* ufix5 */,
             output logic signed [25:0] zout  /* sfix26_En23 */);


  logic yZeroXPositive;  /* ufix1 */
  logic yZeroXNegative;  /* ufix1 */
  logic [1:0] xyNegative;  /* ufix2 */
  logic AbsRel;  /* ufix1 */
  logic signed [25:0] pidivtwo;  /* sfix26_En23 */
  logic signed [25:0] zCast;  /* sfix26_En23 */
  logic signed [25:0] pivdivtwosubout;  /* sfix26_En23 */
  logic signed [25:0] mux1out;  /* sfix26_En23 */
  logic signed [26:0] Negation_cast;  /* sfix27_En23 */
  logic signed [26:0] Negation_cast_1;  /* sfix27_En23 */
  logic signed [27:0] Negation_cast_2;  /* sfix28_En23 */
  logic signed [25:0] mux1out_negate;  /* sfix26_En23 */
  logic signed [25:0] pionepos;  /* sfix26_En23 */
  logic signed [25:0] pi_subtraction;  /* sfix26_En23 */
  logic signed [25:0] pioneneg;  /* sfix26_En23 */
  logic signed [25:0] negpi_addition;  /* sfix26_En23 */
  logic signed [25:0] mux2out;  /* sfix26_En23 */
  logic signed [25:0] mux5out;  /* sfix26_En23 */
  logic signed [25:0] zero_1;  /* sfix26_En23 */
  logic signed [25:0] mux6out;  /* sfix26_En23 */


  assign yZeroXPositive = QA_Control[4];



  assign yZeroXNegative = QA_Control[3];



  assign xyNegative = QA_Control[1:0];



  assign AbsRel = QA_Control[2];



  assign pidivtwo = 26'sb00110010010000111111011010;



  assign zCast = {{2{zin[23]}}, zin};



  assign pivdivtwosubout = pidivtwo - zCast;



  assign mux1out = (AbsRel == 1'b0 ? pivdivtwosubout :
              zCast);



  assign Negation_cast = {mux1out[25], mux1out};
  assign Negation_cast_1 =  - (Negation_cast);
  assign Negation_cast_2 = {Negation_cast_1[26], Negation_cast_1};
  assign mux1out_negate = Negation_cast_2[25:0];



  assign pionepos = 26'sb01100100100001111110110101;



  assign pi_subtraction = pionepos - mux1out;



  assign pioneneg = 26'sb10011011011110000001001010;



  assign negpi_addition = pioneneg + mux1out;



  assign mux2out = (xyNegative == 2'b00 ? mux1out :
              (xyNegative == 2'b01 ? mux1out_negate :
              (xyNegative == 2'b10 ? pi_subtraction :
              negpi_addition)));



  assign mux5out = (yZeroXNegative == 1'b0 ? mux2out :
              pionepos);



  assign zero_1 = 26'sb00000000000000000000000000;



  assign mux6out = (yZeroXPositive == 1'b0 ? mux5out :
              zero_1);



  assign zout = mux6out;

endmodule  // Quadrant_Correction

