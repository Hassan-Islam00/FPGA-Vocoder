// -------------------------------------------------------------
// 
// File Name: C:\Users\Hassa\Documents\GitHub\vocoder\MATLAB\MATLAB_CodeGen\codegen\envelopeModulation\hdlsrc\Quadrant_Mapper_block.sv
// Created: 2024-03-28 20:55:43
// 
// Generated by MATLAB 23.2, MATLAB Coder 23.2 and HDL Coder 23.2
// 
// 
// -------------------------------------------------------------


import envelopeModulation_fixpt_pkg::* ;

// -------------------------------------------------------------
// 
// Module: Quadrant_Mapper_block
// Source Path: envelopeModulation_fixpt/HDL_CMA_core/Quadrant_Mapper
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Quadrant_Mapper_block
          (  input logic clk,
             input logic reset,
             input logic enb,
             input logic signed [23:0] xin  /* sfix24 */,
             input logic signed [23:0] yin  /* sfix24 */,
             output logic signed [23:0] xout  /* sfix24 */,
             output logic signed [23:0] yout  /* sfix24 */);


  logic signed [24:0] abs_y;  /* sfix25 */
  logic signed [24:0] abs_1;  /* sfix25 */
  logic signed [23:0] xAbs;  /* sfix24 */
  logic signed [23:0] xAbsReg;  /* sfix24 */
  logic signed [24:0] abs_y_1;  /* sfix25 */
  logic signed [24:0] abs_3;  /* sfix25 */
  logic signed [23:0] yAbs;  /* sfix24 */
  logic signed [23:0] yAbsReg;  /* sfix24 */
  logic relop_relop1;
  logic signed [23:0] xout_1;  /* sfix24 */
  logic signed [23:0] yout_1;  /* sfix24 */


  assign abs_1 = {xin[23], xin};
  assign abs_y = (xin < 24'sb000000000000000000000000 ?  - (abs_1) :
              {xin[23], xin});
  assign xAbs = abs_y[23:0];



  always_ff @(posedge clk or posedge reset)
    begin : DelayxAbs_process
      if (reset == 1'b1) begin
        xAbsReg <= 24'sb000000000000000000000000;
      end
      else begin
        if (enb) begin
          xAbsReg <= xAbs;
        end
      end
    end



  assign abs_3 = {yin[23], yin};
  assign abs_y_1 = (yin < 24'sb000000000000000000000000 ?  - (abs_3) :
              {yin[23], yin});
  assign yAbs = abs_y_1[23:0];



  always_ff @(posedge clk or posedge reset)
    begin : DelayyAbs_process
      if (reset == 1'b1) begin
        yAbsReg <= 24'sb000000000000000000000000;
      end
      else begin
        if (enb) begin
          yAbsReg <= yAbs;
        end
      end
    end



  assign relop_relop1 = xAbsReg > yAbsReg;



  assign xout_1 = (relop_relop1 == 1'b0 ? yAbsReg :
              xAbsReg);



  assign xout = xout_1;

  assign yout_1 = (relop_relop1 == 1'b0 ? xAbsReg :
              yAbsReg);



  assign yout = yout_1;

endmodule  // Quadrant_Mapper_block

