// -------------------------------------------------------------
// 
// File Name: C:\Users\Hassa\Documents\GitHub\vocoder\MATLAB\MATLAB_CodeGen\codegen\envelopeModulation\hdlsrc\RADIX22FFT_SDF1_9.sv
// Created: 2024-03-28 20:55:43
// 
// Generated by MATLAB 23.2, MATLAB Coder 23.2 and HDL Coder 23.2
// 
// 
// -------------------------------------------------------------


import envelopeModulation_fixpt_pkg::* ;

// -------------------------------------------------------------
// 
// Module: RADIX22FFT_SDF1_9
// Source Path: envelopeModulation_fixpt/dsphdl.IFFT/RADIX22FFT_SDF1_9
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module RADIX22FFT_SDF1_9
          (  input logic clk,
             input logic reset,
             input logic enb,
             input logic signed [25:0] din_9_1_re_dly  /* sfix26 */,
             input logic signed [25:0] din_9_1_im_dly  /* sfix26 */,
             input logic din_9_vld_dly,
             input logic rd_9_Addr  /* ufix1 */,
             input logic rd_9_Enb,
             input logic signed [25:0] twdl_9_1_re  /* sfix26_En24 */,
             input logic signed [25:0] twdl_9_1_im  /* sfix26_En24 */,
             input logic twdl_9_1_vld,
             input logic proc_9_enb,
             input logic softReset,
             output logic signed [25:0] dout_9_1_re  /* sfix26 */,
             output logic signed [25:0] dout_9_1_im  /* sfix26 */,
             output logic dout_9_1_vld,
             output logic dinXTwdl_9_1_vld);


  logic signed [25:0] dinXTwdl_re;  /* sfix26 */
  logic signed [25:0] dinXTwdl_im;  /* sfix26 */
  logic x_vld;
  logic signed [25:0] wrData_re;  /* sfix26 */
  logic signed [25:0] wrData_im;  /* sfix26 */
  logic wrAddr;  /* ufix1 */
  logic wrEnb;
  logic signed [25:0] twoLocationReg_0_MEM_re_0;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_MEM_im_0;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_MEM_re_1;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_MEM_im_1;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_dout_re_reg;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_dout_im_reg;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_MEM_re_0_next;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_MEM_im_0_next;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_MEM_re_1_next;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_MEM_im_1_next;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_dout_re_reg_next;  /* sfix26 */
  logic signed [25:0] twoLocationReg_0_dout_im_reg_next;  /* sfix26 */
  logic signed [25:0] x_re;  /* sfix26 */
  logic signed [25:0] x_im;  /* sfix26 */
  logic signed [26:0] Radix22ButterflyG1_btf1_re_reg;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_btf1_im_reg;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_btf2_re_reg;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_btf2_im_reg;  /* sfix27 */
  logic signed [25:0] Radix22ButterflyG1_x_re_dly1;  /* sfix26 */
  logic signed [25:0] Radix22ButterflyG1_x_im_dly1;  /* sfix26 */
  logic Radix22ButterflyG1_x_vld_dly1;
  logic signed [25:0] Radix22ButterflyG1_dinXtwdl_re_dly1;  /* sfix26 */
  logic signed [25:0] Radix22ButterflyG1_dinXtwdl_im_dly1;  /* sfix26 */
  logic signed [25:0] Radix22ButterflyG1_dinXtwdl_re_dly2;  /* sfix26 */
  logic signed [25:0] Radix22ButterflyG1_dinXtwdl_im_dly2;  /* sfix26 */
  logic Radix22ButterflyG1_dinXtwdl_vld_dly1;
  logic Radix22ButterflyG1_dinXtwdl_vld_dly2;
  logic signed [26:0] Radix22ButterflyG1_btf1_re_reg_next;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_btf1_im_reg_next;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_btf2_re_reg_next;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_btf2_im_reg_next;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_sra_temp;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_sra_temp_1;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_sra_temp_2;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_sra_temp_3;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_1;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_2;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_3;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_4;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_5;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_6;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_7;  /* sfix27 */
  logic signed [26:0] Radix22ButterflyG1_8;  /* sfix27 */
  logic signed [25:0] xf_re;  /* sfix26 */
  logic signed [25:0] xf_im;  /* sfix26 */
  logic xf_vld;
  logic signed [25:0] dinXTwdlf_re;  /* sfix26 */
  logic signed [25:0] dinXTwdlf_im;  /* sfix26 */
  logic dinxTwdlf_vld;
  logic signed [25:0] btf1_re;  /* sfix26 */
  logic signed [25:0] btf1_im;  /* sfix26 */
  logic signed [25:0] btf2_re;  /* sfix26 */
  logic signed [25:0] btf2_im;  /* sfix26 */
  logic btf_vld;


  Complex4Multiply_block2 u_MUL4 (.clk(clk),
                                  .reset(reset),
                                  .enb(enb),
                                  .din_9_1_re_dly(din_9_1_re_dly),  /* sfix26 */
                                  .din_9_1_im_dly(din_9_1_im_dly),  /* sfix26 */
                                  .din_9_vld_dly(din_9_vld_dly),
                                  .twdl_9_1_re(twdl_9_1_re),  /* sfix26_En24 */
                                  .twdl_9_1_im(twdl_9_1_im),  /* sfix26_En24 */
                                  .softReset(softReset),
                                  .dinXTwdl_re(dinXTwdl_re),  /* sfix26 */
                                  .dinXTwdl_im(dinXTwdl_im),  /* sfix26 */
                                  .dinXTwdl_9_1_vld(dinXTwdl_9_1_vld)
                                  );

  always_ff @(posedge clk or posedge reset)
    begin : intdelay_process
      if (reset == 1'b1) begin
        x_vld <= 1'b0;
      end
      else begin
        if (enb) begin
          x_vld <= rd_9_Enb;
        end
      end
    end



  // twoLocationReg_0
  always_ff @(posedge clk or posedge reset)
    begin : twoLocationReg_0_process
      if (reset == 1'b1) begin
        twoLocationReg_0_MEM_re_0 <= 26'sb00000000000000000000000000;
        twoLocationReg_0_MEM_im_0 <= 26'sb00000000000000000000000000;
        twoLocationReg_0_MEM_re_1 <= 26'sb00000000000000000000000000;
        twoLocationReg_0_MEM_im_1 <= 26'sb00000000000000000000000000;
        twoLocationReg_0_dout_re_reg <= 26'sb00000000000000000000000000;
        twoLocationReg_0_dout_im_reg <= 26'sb00000000000000000000000000;
      end
      else begin
        if (enb) begin
          twoLocationReg_0_MEM_re_0 <= twoLocationReg_0_MEM_re_0_next;
          twoLocationReg_0_MEM_im_0 <= twoLocationReg_0_MEM_im_0_next;
          twoLocationReg_0_MEM_re_1 <= twoLocationReg_0_MEM_re_1_next;
          twoLocationReg_0_MEM_im_1 <= twoLocationReg_0_MEM_im_1_next;
          twoLocationReg_0_dout_re_reg <= twoLocationReg_0_dout_re_reg_next;
          twoLocationReg_0_dout_im_reg <= twoLocationReg_0_dout_im_reg_next;
        end
      end
    end

  always @(rd_9_Addr, twoLocationReg_0_MEM_im_0, twoLocationReg_0_MEM_im_1,
       twoLocationReg_0_MEM_re_0, twoLocationReg_0_MEM_re_1,
       twoLocationReg_0_dout_im_reg, twoLocationReg_0_dout_re_reg, wrAddr,
       wrData_im, wrData_re, wrEnb) begin
    twoLocationReg_0_MEM_re_0_next = twoLocationReg_0_MEM_re_0;
    twoLocationReg_0_MEM_im_0_next = twoLocationReg_0_MEM_im_0;
    twoLocationReg_0_MEM_re_1_next = twoLocationReg_0_MEM_re_1;
    twoLocationReg_0_MEM_im_1_next = twoLocationReg_0_MEM_im_1;
    if (rd_9_Addr == 1'b1) begin
      twoLocationReg_0_dout_re_reg_next = twoLocationReg_0_MEM_re_1;
      twoLocationReg_0_dout_im_reg_next = twoLocationReg_0_MEM_im_1;
    end
    else begin
      twoLocationReg_0_dout_re_reg_next = twoLocationReg_0_MEM_re_0;
      twoLocationReg_0_dout_im_reg_next = twoLocationReg_0_MEM_im_0;
    end
    if (wrEnb) begin
      if (wrAddr == 1'b1) begin
        twoLocationReg_0_MEM_re_1_next = wrData_re;
        twoLocationReg_0_MEM_im_1_next = wrData_im;
      end
      else begin
        twoLocationReg_0_MEM_re_0_next = wrData_re;
        twoLocationReg_0_MEM_im_0_next = wrData_im;
      end
    end
    x_re = twoLocationReg_0_dout_re_reg;
    x_im = twoLocationReg_0_dout_im_reg;
  end



  // Radix22ButterflyG1
  always_ff @(posedge clk or posedge reset)
    begin : Radix22ButterflyG1_process
      if (reset == 1'b1) begin
        Radix22ButterflyG1_btf1_re_reg <= 27'sb000000000000000000000000000;
        Radix22ButterflyG1_btf1_im_reg <= 27'sb000000000000000000000000000;
        Radix22ButterflyG1_btf2_re_reg <= 27'sb000000000000000000000000000;
        Radix22ButterflyG1_btf2_im_reg <= 27'sb000000000000000000000000000;
        Radix22ButterflyG1_x_re_dly1 <= 26'sb00000000000000000000000000;
        Radix22ButterflyG1_x_im_dly1 <= 26'sb00000000000000000000000000;
        Radix22ButterflyG1_x_vld_dly1 <= 1'b0;
        xf_re <= 26'sb00000000000000000000000000;
        xf_im <= 26'sb00000000000000000000000000;
        xf_vld <= 1'b0;
        Radix22ButterflyG1_dinXtwdl_re_dly1 <= 26'sb00000000000000000000000000;
        Radix22ButterflyG1_dinXtwdl_im_dly1 <= 26'sb00000000000000000000000000;
        Radix22ButterflyG1_dinXtwdl_re_dly2 <= 26'sb00000000000000000000000000;
        Radix22ButterflyG1_dinXtwdl_im_dly2 <= 26'sb00000000000000000000000000;
        Radix22ButterflyG1_dinXtwdl_vld_dly1 <= 1'b0;
        Radix22ButterflyG1_dinXtwdl_vld_dly2 <= 1'b0;
        btf_vld <= 1'b0;
      end
      else begin
        if (enb) begin
          Radix22ButterflyG1_btf1_re_reg <= Radix22ButterflyG1_btf1_re_reg_next;
          Radix22ButterflyG1_btf1_im_reg <= Radix22ButterflyG1_btf1_im_reg_next;
          Radix22ButterflyG1_btf2_re_reg <= Radix22ButterflyG1_btf2_re_reg_next;
          Radix22ButterflyG1_btf2_im_reg <= Radix22ButterflyG1_btf2_im_reg_next;
          xf_re <= Radix22ButterflyG1_x_re_dly1;
          xf_im <= Radix22ButterflyG1_x_im_dly1;
          xf_vld <= Radix22ButterflyG1_x_vld_dly1;
          btf_vld <= Radix22ButterflyG1_dinXtwdl_vld_dly2;
          Radix22ButterflyG1_dinXtwdl_vld_dly2 <= Radix22ButterflyG1_dinXtwdl_vld_dly1;
          Radix22ButterflyG1_dinXtwdl_re_dly2 <= Radix22ButterflyG1_dinXtwdl_re_dly1;
          Radix22ButterflyG1_dinXtwdl_im_dly2 <= Radix22ButterflyG1_dinXtwdl_im_dly1;
          Radix22ButterflyG1_dinXtwdl_re_dly1 <= dinXTwdl_re;
          Radix22ButterflyG1_dinXtwdl_im_dly1 <= dinXTwdl_im;
          Radix22ButterflyG1_x_re_dly1 <= x_re;
          Radix22ButterflyG1_x_im_dly1 <= x_im;
          Radix22ButterflyG1_x_vld_dly1 <= x_vld;
          Radix22ButterflyG1_dinXtwdl_vld_dly1 <= proc_9_enb && dinXTwdl_9_1_vld;
        end
      end
    end

  assign dinxTwdlf_vld = ( ! proc_9_enb) && dinXTwdl_9_1_vld;
  assign Radix22ButterflyG1_1 = {Radix22ButterflyG1_x_re_dly1[25], Radix22ButterflyG1_x_re_dly1};
  assign Radix22ButterflyG1_2 = {Radix22ButterflyG1_dinXtwdl_re_dly2[25], Radix22ButterflyG1_dinXtwdl_re_dly2};
  assign Radix22ButterflyG1_btf1_re_reg_next = Radix22ButterflyG1_1 + Radix22ButterflyG1_2;
  assign Radix22ButterflyG1_3 = {Radix22ButterflyG1_x_re_dly1[25], Radix22ButterflyG1_x_re_dly1};
  assign Radix22ButterflyG1_4 = {Radix22ButterflyG1_dinXtwdl_re_dly2[25], Radix22ButterflyG1_dinXtwdl_re_dly2};
  assign Radix22ButterflyG1_btf2_re_reg_next = Radix22ButterflyG1_3 - Radix22ButterflyG1_4;
  assign Radix22ButterflyG1_5 = {Radix22ButterflyG1_x_im_dly1[25], Radix22ButterflyG1_x_im_dly1};
  assign Radix22ButterflyG1_6 = {Radix22ButterflyG1_dinXtwdl_im_dly2[25], Radix22ButterflyG1_dinXtwdl_im_dly2};
  assign Radix22ButterflyG1_btf1_im_reg_next = Radix22ButterflyG1_5 + Radix22ButterflyG1_6;
  assign Radix22ButterflyG1_7 = {Radix22ButterflyG1_x_im_dly1[25], Radix22ButterflyG1_x_im_dly1};
  assign Radix22ButterflyG1_8 = {Radix22ButterflyG1_dinXtwdl_im_dly2[25], Radix22ButterflyG1_dinXtwdl_im_dly2};
  assign Radix22ButterflyG1_btf2_im_reg_next = Radix22ButterflyG1_7 - Radix22ButterflyG1_8;
  assign dinXTwdlf_re = dinXTwdl_re;
  assign dinXTwdlf_im = dinXTwdl_im;
  assign Radix22ButterflyG1_sra_temp = Radix22ButterflyG1_btf1_re_reg >>> 8'd1;
  assign btf1_re = Radix22ButterflyG1_sra_temp[25:0];
  assign Radix22ButterflyG1_sra_temp_1 = Radix22ButterflyG1_btf1_im_reg >>> 8'd1;
  assign btf1_im = Radix22ButterflyG1_sra_temp_1[25:0];
  assign Radix22ButterflyG1_sra_temp_2 = Radix22ButterflyG1_btf2_re_reg >>> 8'd1;
  assign btf2_re = Radix22ButterflyG1_sra_temp_2[25:0];
  assign Radix22ButterflyG1_sra_temp_3 = Radix22ButterflyG1_btf2_im_reg >>> 8'd1;
  assign btf2_im = Radix22ButterflyG1_sra_temp_3[25:0];



  SDFCommutator9 u_SDFCOMMUTATOR_9 (.clk(clk),
                                    .reset(reset),
                                    .enb(enb),
                                    .din_9_vld_dly(din_9_vld_dly),
                                    .xf_re(xf_re),  /* sfix26 */
                                    .xf_im(xf_im),  /* sfix26 */
                                    .xf_vld(xf_vld),
                                    .dinXTwdlf_re(dinXTwdlf_re),  /* sfix26 */
                                    .dinXTwdlf_im(dinXTwdlf_im),  /* sfix26 */
                                    .dinxTwdlf_vld(dinxTwdlf_vld),
                                    .btf1_re(btf1_re),  /* sfix26 */
                                    .btf1_im(btf1_im),  /* sfix26 */
                                    .btf2_re(btf2_re),  /* sfix26 */
                                    .btf2_im(btf2_im),  /* sfix26 */
                                    .btf_vld(btf_vld),
                                    .softReset(softReset),
                                    .wrData_re(wrData_re),  /* sfix26 */
                                    .wrData_im(wrData_im),  /* sfix26 */
                                    .wrAddr(wrAddr),  /* ufix1 */
                                    .wrEnb(wrEnb),
                                    .dout_9_1_re(dout_9_1_re),  /* sfix26 */
                                    .dout_9_1_im(dout_9_1_im),  /* sfix26 */
                                    .dout_9_1_vld(dout_9_1_vld)
                                    );

endmodule  // RADIX22FFT_SDF1_9

